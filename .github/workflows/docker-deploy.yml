name: Build and deploy Docker Image to Amazon ECR
on:
  push:
    branches: [ main ]
env:
  AWS_REGION: ${{ secrets.AWS_REGION }}
  ECR_REGISTRY: ${{ secrets.ECR_REGISTRY }}
  IMAGE_REPO: telegram-sport-bot
jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR Private
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2
        with:
          mask-password: 'false'
          registry-type: private

      # Build only for the platform you need (likely amd64)
      - name: Build and push Docker image
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: ${{ env.IMAGE_REPO }}
          IMAGE_TAG: latest
        run: |
          # Build specifically for amd64 platform only
          docker build --platform linux/amd64 -t $REGISTRY/$REPOSITORY:$IMAGE_TAG .
          docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG

      - name: Clean up old images
        run: |
          aws ecr batch-delete-image \
            --repository-name ${{ env.IMAGE_REPO }} \
            --image-ids imageTag=latest \
            --region ${{ env.AWS_REGION }} || true
        continue-on-error: true